{"version":3,"sources":["logo.svg","Timebar.js","App.js","reportWebVitals.js","index.js"],"names":["TimeBar","useState","Date","rightNow","setRightNow","theStorySoFar","getSeconds","getMinutes","getHours","getDate","getMonth","width","String","useEffect","setTimeout","Card","style","margin","height","CardHeader","title","CardContent","backgroundColor","marginLeft","marginRight","color","borderRadius","substring","marginTop","App","className","display","justifyContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAAe,I,4CCGA,SAASA,IAAW,IAAD,EAEEC,mBAAS,IAAIC,MAFf,mBAEvBC,EAFuB,KAEbC,EAFa,KAKxBC,EAAoK,KAAlJF,EAASG,aAAoC,GAAtBH,EAASI,aAAsC,GAApBJ,EAASK,WAAc,GAA4B,IAAtBL,EAASM,UAAU,GAAM,GAAG,GAAyB,GAApBN,EAASO,WAAc,GAAG,GAAG,IADnJ,QAEZC,EAAQC,OAAOP,GAAe,IAQpC,OANAQ,qBAAU,WACNC,YAAW,WACPV,EAAY,IAAIF,QAClB,QAIF,eAACa,EAAA,EAAD,CAAMC,MAAO,CAACC,OAAO,GAAIC,OAAO,KAAhC,UACI,cAACC,EAAA,EAAD,CAAYC,MAAO,eACnB,cAACC,EAAA,EAAD,UACI,sBAAKL,MAAO,CAACM,gBAAgB,YAAaJ,OAAO,QAAQK,WAAW,IAAKC,YAAY,IAAIC,MAAM,OAAQC,aAAa,GAAIf,MAAM,OAA9H,iDAA2KC,OAAO,IAAIP,GAAesB,UAAU,EAAE,GAAjN,IACI,qBAAKX,MAAO,CAACM,gBAAgB,OAAQJ,OAAO,QAASU,UAAU,SAAUjB,MAAMA,EAAOY,YAAY,aCVvGM,MARf,WACE,OACE,qBAAKC,UAAU,MAAMd,MAAO,CAACe,QAAQ,OAAQb,OAAO,QAASP,MAAM,QAASqB,eAAe,UAA3F,SACE,cAAChC,EAAD,OCKSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb2a2f2d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Card, CardContent, CardHeader } from '@material-ui/core'\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nexport default function TimeBar() {\r\n\r\n    const [rightNow, setRightNow] = useState(new Date())\r\n\r\n    const totalYear = 365*24*60*60\r\n    const theStorySoFar = ((rightNow.getSeconds()+(rightNow.getMinutes()*60)+(rightNow.getHours()*60*60)+((rightNow.getDate()-1)*24*60*60)+(rightNow.getMonth()*30*24*60*60))*100)/totalYear\r\n    const width = String(theStorySoFar)+'%'\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setRightNow(new Date())\r\n        },100)\r\n    })\r\n\r\n    return (\r\n        <Card style={{margin:50, height:150}}>\r\n            <CardHeader title={' Time Bar '}/>\r\n            <CardContent>\r\n                <div style={{backgroundColor:'#08590070', height:'3.5vh',marginLeft:100, marginRight:100,color:'#333', borderRadius:20, width:'80%'}}>Percent of Time Remaining In Year - {String(100-theStorySoFar).substring(0,9)}%\r\n                    <div style={{backgroundColor:'#fff', height:'3.5vh', marginTop:'-2.9vh', width:width, marginLeft:-1}}></div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport TimeBar from './Timebar';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{display:'flex', height:'100vh', width:'100vw', justifyContent:'center'}}>\n      <TimeBar/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}