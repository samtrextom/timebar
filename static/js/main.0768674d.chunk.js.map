{"version":3,"sources":["logo.svg","Timebar.js","DateToPercent.js","math.js","App.js","reportWebVitals.js","index.js"],"names":["TimeBar","useState","Date","rightNow","setRightNow","theStorySoFar","getSeconds","getMinutes","getHours","getDate","getMonth","width","String","useEffect","setTimeout","Card","style","margin","height","CardHeader","title","CardContent","backgroundColor","marginLeft","marginRight","color","borderRadius","substring","marginTop","DateToPercent","selectedDate","setSelectedDate","converted","setConverted","handleDateChange","date","display","utils","DateFnsUtils","id","label","format","value","onChange","KeyboardButtonProps","Button","onClick","variant","flex","fontSize","App","className","justifyContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0768674d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Card, CardContent, CardHeader } from '@material-ui/core'\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nexport default function TimeBar() {\r\n\r\n    const [rightNow, setRightNow] = useState(new Date())\r\n\r\n    const totalYear = 365*24*60*60\r\n    const theStorySoFar = ((rightNow.getSeconds()+(rightNow.getMinutes()*60)+(rightNow.getHours()*60*60)+((rightNow.getDate()-1)*24*60*60)+(rightNow.getMonth()*30*24*60*60))*100)/totalYear\r\n    const width = String(theStorySoFar)+'%'\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setRightNow(new Date())\r\n        },100)\r\n    })\r\n\r\n    return (\r\n        <Card style={{margin:50, height:150}}>\r\n            <CardHeader title={' Time Bar '}/>\r\n            <CardContent>\r\n                <div style={{backgroundColor:'#08590070', height:'3.5vh',marginLeft:100, marginRight:100,color:'#333', borderRadius:20, width:'80%'}}>POYR - {String(100-theStorySoFar).substring(0,9)}%\r\n                    <div style={{backgroundColor:'#fff', height:'5vh', marginTop:'-2.9vh', width:width, marginLeft:-1}}></div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n\r\n    )\r\n}\r\n","import {Card, CardContent, CardHeader, Button } from '@material-ui/core'\r\nimport React, {useState} from 'react'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport {getPOYR} from './math'\r\n\r\nexport default function DateToPercent() {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [converted, setConverted] = useState(null)\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date)\r\n  };  \r\n\r\n  const handleConversion=()=>{\r\n    setConverted(getPOYR(selectedDate))\r\n  }\r\n\r\n    return (\r\n        <Card style={{margin:50}}>\r\n            <CardHeader title={' Date To Percent Convertor '}/>\r\n            <CardContent >\r\n              <div style={{display:'flex', width:'100%'}}>\r\n                <div style={{display:'block'}}>\r\n                  <div>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                      <KeyboardDatePicker\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-dialog\"\r\n                        label=\"Date picker dialog\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                      />\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker\"\r\n                        label=\"Time picker\"\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change time',\r\n                        }}\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </div>\r\n                  <div style={{display:'flex'}}>\r\n                    <Button onClick={handleConversion} variant=\"contained\">Convert</Button>\r\n                    <div style={{flex:1}}></div>\r\n                    {converted && <div style={{fontSize:30}}>POYR: {String(100-converted).substring(0,9)}%</div>}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n        </Card>\r\n\r\n    )\r\n}\r\n","export const getPOYR=(date)=>{\r\n  const totalYear = 365*24*60*60\r\n  const theStorySoFar = ((date.getSeconds()+(date.getMinutes()*60)+(date.getHours()*60*60)+((date.getDate()-1)*24*60*60)+(date.getMonth()*30*24*60*60))*100)/totalYear\r\n  return theStorySoFar\r\n}\r\n\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport TimeBar from './Timebar';\nimport DateToPercent from './DateToPercent';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{display:'flex', height:'100vh', width:'100vw', justifyContent:'center',backgroundColor:'#e3e3e3'}}>\n      <div style={{display:'block'}}>\n        <h1>Percent of Year Remaining (POYR)</h1>\n        <TimeBar/>\n        <DateToPercent/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}